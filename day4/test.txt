9425061
Filename: p2.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
     9     50.4 MiB     50.4 MiB           1   @profile
    10                                         def part2():
    11     50.4 MiB      0.0 MiB           1       lines = D.splitlines()
    12                                         
    13     50.5 MiB      0.0 MiB         441       instances_per_card = defaultdict(lambda: 1)
    14                                         
    15     50.5 MiB      0.0 MiB         221       for current_line, line in enumerate(lines):
    16                                                 # get the number of instances (original + copies) of the current card, or create a new one with 1
    17     50.5 MiB      0.0 MiB         220           instance_on_current_line = instances_per_card[current_line + 1]
    18     50.5 MiB      0.0 MiB         220           card_number, card_data = line.split(":")
    19                                         
    20     50.5 MiB      0.0 MiB         220           number_on_card = int(card_number.split()[1])
    21     50.5 MiB      0.0 MiB         220           winning_numbers, my_numbers = card_data.split("|")
    22     50.5 MiB      0.0 MiB         220           winning_numbers = set(winning_numbers.split())
    23     50.5 MiB      0.0 MiB         220           my_numbers = my_numbers.split()
    24                                         
    25                                                 # get the number of winning numbers on the current card
    26                                                 # another way to write this would be:
    27                                                 # for number in my_numbers:
    28                                                 #     if number in winning_numbers:
    29                                                 #         winners += 1
    30     50.5 MiB      0.0 MiB        7173           winners = sum(1 for number in my_numbers if number in winning_numbers)
    31                                         
    32                                                 # loop through the winners and add copies to the next lines
    33     50.5 MiB      0.0 MiB        1233           for i in range(1, winners + 1):
    34                                                     # add the number of instances on the current line to the next line
    35                                                     # for example, if there are 2 instances of the current card on the current line,
    36                                                     # add 2 instances of the next card to the next line
    37                                                     # this is because each copy of the current card will add 1 instance of the next card
    38     50.5 MiB      0.0 MiB        1013               instances_per_card[number_on_card + i] += instance_on_current_line
    39                                         
    40     50.5 MiB      0.0 MiB           1       print(sum(instances_per_card.values()))


--- 0.13729000091552734 seconds ---
